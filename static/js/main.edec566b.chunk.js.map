{"version":3,"sources":["Page/Home/Home.js","utils/config.js","App.js","serviceWorker.js","index.js"],"names":["startX","startY","moveEndX","moveEndY","TouchState","common","divInfo","level","color","bgColor","Home","props","randomPutNum","f","data","getSpace","length","k","Date","getTime","i","parseInt","j","num","state","max","map","setItem","message","info","Math","pow","push","restart","setState","setTimeout","saveState","localStorage","JSON","stringify","toString","getState","parse","getItem","handleMapRight","Data","s","check","l","handleMapLeft","handleMapUp","handleMapDown","itemToDiv","item","key","className","style","width","height","background","borderRadius","fontSize","fontWeight","lineToDiv","padding","touchstart","e","window","event","targetTouches","pageX","pageY","touchmove","X","Y","abs","touchEnd","this","addEventListener","console","log","onTouchStart","onTouchMove","onTouchEnd","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","type","onClick","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edec566b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../css/common.css';\r\nimport './Home.css';\r\nimport { common } from '../../utils/config';\r\nimport { Button, message } from 'antd';\r\nlet startX,startY,moveEndX,moveEndY;\r\nlet TouchState;\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super()\r\n        this.state={\r\n            map:[\r\n                [0,0,0,0],\r\n                [0,0,0,0],\r\n                [0,0,0,0],\r\n                [0,0,0,0]\r\n            ],\r\n            max:2\r\n        }\r\n    }\r\n    randomPutNum=(f)=>{\r\n        let data=[]\r\n        data=this.getSpace()\r\n        if(data.length===0){\r\n            message.info(\"游戏结束!:\"+Math.pow(2,this.state.max+1))\r\n            return \r\n        }\r\n        let k = data[(new Date().getTime())%data.length]\r\n        let i=parseInt(k/4)\r\n        let j=k%4\r\n        //if(f)console.log(i,j)\r\n        let num = this.state.max>16?4:2\r\n        if(this.state.map[i][j]===0)\r\n            this.setItem(i,j,num)\r\n        else{\r\n            this.randomPutNum(false)\r\n        }\r\n    }\r\n    getSpace=()=>{\r\n        let data=[]\r\n        for(let i=0;i<4;i++){\r\n            for(let j=0;j<4;j++){\r\n                if(this.state.map[i][j]===0)\r\n                    data.push(i*4+j)\r\n            }\r\n        }\r\n        return data\r\n    }\r\n    restart=()=>{\r\n        this.setState({map:[\r\n            [0,0,0,0],\r\n            [0,0,0,0],\r\n            [0,0,0,0],\r\n            [0,0,0,0]\r\n        ],max:2})\r\n        setTimeout(()=>{this.randomPutNum(true)},50)\r\n        setTimeout(()=>{this.saveState()},100)\r\n    }\r\n    saveState=()=>{\r\n        localStorage.setItem(\"2048data\",JSON.stringify(this.state.map))\r\n        localStorage.setItem(\"2048dataMax\",this.state.max.toString())\r\n    }\r\n    getState=()=>{\r\n        this.setState({map:JSON.parse(localStorage.getItem(\"2048data\"))})\r\n        this.setState({max:parseInt(localStorage.getItem(\"2048dataMax\"))})\r\n    }\r\n    componentDidMount(){\r\n        if(!localStorage.getItem(\"2048dataMax\")){\r\n            this.randomPutNum(true)\r\n        }\r\n        else{\r\n            this.getState()\r\n        }\r\n        window.addEventListener(\"keydown\",e=>{\r\n            switch(e.key){\r\n                case \"ArrowDown\":\r\n                    this.handleMapDown()\r\n                    break\r\n                case \"ArrowUp\":\r\n                    this.handleMapUp()\r\n                    break\r\n                case \"ArrowLeft\":\r\n                    this.handleMapLeft()\r\n                    break\r\n                case \"ArrowRight\":\r\n                    this.handleMapRight()\r\n                    break\r\n                default:\r\n                    console.log(e.key)\r\n                    break\r\n            }\r\n            this.randomPutNum(true)\r\n            setTimeout(()=>{this.saveState()},50)\r\n        })\r\n    }\r\n    handleMapRight=()=>{\r\n        let {map,max}=this.state\r\n        for(let i = 0;i < 4;i++){\r\n            let Data=[map[i][0],map[i][1],map[i][2],map[i][3]]\r\n            let s=3\r\n            let check=-1\r\n            for(let k=0;k<4;k++){\r\n                let f=3-k\r\n                if(Data[f]!==0){\r\n                    if(check!==-1&&Data[f]===Data[check]){\r\n                        Data[check]+=1\r\n                        if(Data[check]>max){\r\n                            max=Data[check]\r\n                        }\r\n                        Data[f]=0\r\n                    }\r\n                    Data[s]=Data[f]\r\n                    check=s\r\n                    s-=1\r\n                }\r\n            }\r\n            for(let l = s;l>=0;l--){\r\n                Data[l]=0\r\n            }\r\n            map[i][0]=Data[0]\r\n            map[i][1]=Data[1]\r\n            map[i][2]=Data[2]\r\n            map[i][3]=Data[3]\r\n        }\r\n        this.setState({map:map,max:max})\r\n    }\r\n    handleMapLeft=()=>{\r\n        let {map,max}=this.state\r\n        for(let i = 0;i < 4;i++){\r\n            let Data=[map[i][0],map[i][1],map[i][2],map[i][3]]\r\n            let s=0\r\n            let check=-1\r\n            for(let k=0;k<4;k++){\r\n                let f=k\r\n                if(Data[f]!==0){\r\n                    if(check!==-1&&Data[f]===Data[check]){\r\n                        Data[check]+=1\r\n                        if(Data[check]>max){\r\n                            max=Data[check]\r\n                        }\r\n                        Data[f]=0\r\n                    }\r\n                    Data[s]=Data[f]\r\n                    check=s\r\n                    s+=1\r\n                }\r\n            }\r\n            for(let l = s;l<4;l++){\r\n                Data[l]=0\r\n            }\r\n            map[i][0]=Data[0]\r\n            map[i][1]=Data[1]\r\n            map[i][2]=Data[2]\r\n            map[i][3]=Data[3]\r\n        }\r\n        this.setState({map:map,max:max})\r\n    }\r\n    handleMapUp=()=>{\r\n        let {map,max}=this.state\r\n        for(let i = 0;i < 4;i++){\r\n            let Data=[map[0][i],map[1][i],map[2][i],map[3][i]]\r\n            let s=0\r\n            let check=-1\r\n            for(let k=0;k<4;k++){\r\n                let f=k\r\n                \r\n                if(Data[f]!==0){\r\n                    if(check!==-1&&Data[f]===Data[check]){\r\n                        Data[check]+=1\r\n                        if(Data[check]>max){\r\n                            max=Data[check]\r\n                        }\r\n                        Data[f]=0\r\n                    }\r\n                    Data[s]=Data[f]\r\n                    check=s\r\n                    s+=1\r\n                }\r\n            }\r\n            for(let l = s;l<4;l++){\r\n                Data[l]=0\r\n            }\r\n            map[0][i]=Data[0]\r\n            map[1][i]=Data[1]\r\n            map[2][i]=Data[2]\r\n            map[3][i]=Data[3]\r\n        }\r\n        this.setState({map:map,max:max})\r\n    }\r\n    handleMapDown=()=>{\r\n        let {map,max}=this.state\r\n        for(let i = 0;i < 4;i++){\r\n            let Data=[map[0][i],map[1][i],map[2][i],map[3][i]]\r\n            let s=3\r\n            let check=-1\r\n            for(let k=0;k<4;k++){\r\n                let f=3-k\r\n                \r\n                if(Data[f]!==0){\r\n                    if(check!==-1&&Data[f]===Data[check]){\r\n                        Data[check]+=1;\r\n                        if(Data[check]>max){\r\n                            max=Data[check]\r\n                        }\r\n                        Data[f]=0\r\n                    }\r\n                    Data[s]=Data[f]\r\n                    check=s\r\n                    s-=1\r\n                }\r\n            }\r\n            for(let l = s;l>=0;l--){\r\n                Data[l]=0\r\n            }\r\n            map[0][i]=Data[0]\r\n            map[1][i]=Data[1]\r\n            map[2][i]=Data[2]\r\n            map[3][i]=Data[3]\r\n        }\r\n        this.setState({map:map,max:max})\r\n    }\r\n    itemToDiv=(item,key)=>(\r\n        <div className=\"ccFlexColumn\" style={{width:56,height:56,background:common.divInfo[item].bgColor,color:common.divInfo[item].color,borderRadius:12,fontSize:30,fontWeight:\"bold\"}}>\r\n            {item===0?null:Math.pow(2,item-1)}\r\n        </div>\r\n    )\r\n    setItem(i,j,k){\r\n        let {map}=this.state\r\n        map[i][j]=k\r\n        this.setState({map:map})\r\n    }\r\n    lineToDiv=(item,key)=>(\r\n        <div className=\"bcFlexRow\" style={{width:240,height:56,padding:\"0px 5.3333px\"}} key={\"line_\"+key}>\r\n            {item.map(this.itemToDiv)}\r\n        </div>\r\n    )\r\n    touchstart=()=>{\r\n        let e = window.event;\r\n        // e.preventDefault();\r\n        startX = e.targetTouches[0].pageX;\r\n        startY = e.targetTouches[0].pageY;\r\n        TouchState=0;\r\n    }\r\n    touchmove=(item)=>{\r\n        let e = window.event;\r\n        // e.preventDefault(); // 阻止浏览器默认事件\r\n        moveEndX = e.targetTouches[0].pageX;\r\n        moveEndY = e.targetTouches[0].pageY;\r\n        let X = moveEndX - startX;\r\n        let Y = moveEndY - startY;\r\n        \r\n        if (Math.abs(X) > 60&&X>0){  \r\n            if(TouchState===0)TouchState=1;\r\n            this.handleMapRight()\r\n        } \r\n        else if (Math.abs(X) > 60&&X<0){\r\n            if(TouchState===0)TouchState=1;\r\n            this.handleMapLeft()\r\n        }\r\n        else if (Math.abs(Y) > 60&&Y>0){  \r\n            if(TouchState===0)TouchState=1;\r\n            this.handleMapDown()\r\n        } \r\n        else if (Math.abs(Y) > 60&&Y<0){\r\n            if(TouchState===0)TouchState=1;\r\n            this.handleMapUp()\r\n        }\r\n        \r\n    }\r\n    touchEnd=()=>{\r\n        if(TouchState===1){\r\n            this.randomPutNum(true) \r\n            //TouchState=2;\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"OutSide ccFlexColumn\" style={{background:\"#efefef\"}} onTouchStart={this.touchstart} onTouchMove={this.touchmove} onTouchEnd={this.touchEnd}>\r\n                <div className=\"bcFlexColumn\" style={{width:240,height:240,background:\"#bbada0\",borderTopLeftRadius:20,borderTopRightRadius:20,padding:16/3}}>\r\n                    {this.state.map.map(this.lineToDiv)}\r\n                </div>\r\n                <div className=\"ccFlexRow\" style={{width:240,height:40,background:\"#ffffff\",borderBottomLeftRadius:20,borderBottomRightRadius:20,padding:16/3}}>\r\n                    <div className=\"ccFlexRow\" style={{width:120}}>\r\n                        最大值：{Math.pow(2,this.state.max-1)}\r\n                    </div>\r\n                    <div className=\"ccFlexRow\" style={{width:40}}>\r\n                        <Button type=\"link\" onClick={()=>{this.restart()}}>重置</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\nexport default Home;","export const common={\r\n    divInfo:[\r\n        {\r\n            level:0,\r\n            color:\"white\",\r\n            bgColor:\"black\"\r\n        },\r\n        {\r\n            level:1,\r\n            color:\"white\",\r\n            bgColor:\"#2e8a73\"\r\n        },\r\n        {\r\n            level:2,\r\n            color:\"white\",\r\n            bgColor:\"#3db497\"\r\n        },\r\n        {\r\n            level:3,\r\n            color:\"white\",\r\n            bgColor:\"#37a58a\"\r\n        },\r\n        {\r\n            level:4,\r\n            color:\"white\",\r\n            bgColor:\"#2e8a73\"\r\n        },\r\n        {\r\n            level:5,\r\n            color:\"white\",\r\n            bgColor:\"#27725f\"\r\n        },\r\n        {\r\n            level:6,\r\n            color:\"white\",\r\n            bgColor:\"#1f5e4e\"\r\n        },\r\n        {\r\n            level:7,\r\n            color:\"white\",\r\n            bgColor:\"#216151\"\r\n        },\r\n        {\r\n            level:8,\r\n            color:\"white\",\r\n            bgColor:\"#163f35\"\r\n        },\r\n        {\r\n            level:9,\r\n            color:\"white\",\r\n            bgColor:\"#0b1f1a\"\r\n        },\r\n        {\r\n            level:10,\r\n            color:\"white\",\r\n            bgColor:\"#030807\"\r\n        },\r\n    ]\r\n}","import React from 'react';\r\nimport './css/common.css';\r\nimport './App.css';\r\n//import { BrowserRouter as Router,Route} from 'react-router-dom';\r\nimport Home from './Page/Home/Home';\r\nfunction App() {\r\n  return (\r\n    <div className=\"ccFlexColumn\">\r\n        <Home/> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}